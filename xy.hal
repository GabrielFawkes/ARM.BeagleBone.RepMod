#######################################
#                                     #
# HAL file for XY-Printer w/ Replicap #
# 				      #
# Derived from Replicap config        #
#				      #
# Gabriel Bertrand 2015		      #
#				      # 
#######################################


# Launch setup script. Checking for hardware misses. 
loadusr -w ./setup.sh

#######################################
# EMC/HAL modules loaded into rt 
#######################################

# Kinematics 
loadrt trivkins

# motion controller, get name and thread periods from ini file
# trajectory planner
loadrt tp
loadrt [EMCMOT]EMCMOT servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[TRAJ]AXES tp=tp kins=trivkins

# load low-level drivers
loadrt hal_bb_gpio output_pins=914 input_pins=817,923,925,916,918,911,913,915
loadrt [PRUCONF](DRIVER) prucode=$(HAL_RTMOD_DIR)/[PRUCONF](PRUBIN) [PRUCONF](CONFIG) halname=hpg
loadrt pid count=2
loadrt limit1 count=2
loadrt mux2 count=2
loadrt and2 count=2
loadrt wcomp count=2

# python user-mode HAL module to read ADC value and generate a thermostat output for PWM
# c = analog input channel and thermistor table
# will leave this for now. Need to figure out what of this I actually need. 
# Let's try skipping the Thermal control & pwm for bed. 
# Still loading the python script for hardware

loadusr -Wn HWConfig ./hal_hwconfig_xy -n HWConfig

# ####### #
# THREADS #
# ####### #

addf hpg.capture-position	servo-thread
addf bb_gpio.read		servo-thread
addf bb_gpio.write 		servo-thread
addf motion-command-handler 	servo-thread
addf motion-controller 		servo-thread
addf pid.0.do-pid-calcs		servo-thread
addf pid.1.do-pid-calcs		servo-thread
addf limit1.0			servo-thread
addf limit1.1 			servo-thread
addf hpg.update			servo-thread
addf mux2.0			servo-thread
addf mux2.1			servo-thread
addf and2.0			servo-thread
addf and2.1			servo-thread
addf wcomp.0			servo-thread
addf wcomp.1			servo-thread

# ###################### #
# Axis-of-motion Configs #
# ###################### #

# ######### #
# X[0] Axis #
# ######### #

# enable stuff
newsig emcmot.00.enable bit  
sets emcmot.00.enable FALSE 

net emcmot.00.enable <= axis.0.amp-enable-out
net emcmot.00.enable => hpg.stepgen.00.enable


# position command and feedback
net emcmot.00.pos-cmd <= axis.0.motor-pos-cmd
net emcmot.00.pos-cmd => hpg.stepgen.00.position-cmd

net motor.00.pos-fb <= hpg.stepgen.00.position-fb
net motor.00.pos-fb => axis.0.motor-pos-fb

# timing stuff from .ini file 
setp hpg.stepgen.00.dirsetup		[AXIS_0]DIRSETUP
setp hpg.stepgen.00.dirhold		[AXIS_0]DIRHOLD

setp hpg.stepgen.00.steplen		[AXIS_0]STEPLEN
setp hpg.stepgen.00.stepspace       	[AXIS_0]STEPSPACE

setp hpg.stepgen.00.position-scale  	[AXIS_0]SCALE

setp hpg.stepgen.00.maxvel          	[AXIS_0]STEPGEN_MAX_VEL
setp hpg.stepgen.00.maxaccel        	[AXIS_0]STEPGEN_MAX_ACC 

setp hpg.stepgen.00.steppin		813
setp hpg.stepgen.00.dirpin		826
#setp hpg.stepgen.00.enable              814

# ######### #
# Y[1] Axis # 
# ######### #

# enable stuff
newsig emcmot.01.enable bit 
sets emcmot.01.enable FALSE 

net emcmot.01.enable <= axis.1.amp-enable-out
net emcmot.01.enable => hpg.stepgen.01.enable

# position command and feedback
net emcmot.01.pos-cmd <= axis.1.motor-pos-cmd
net emcmot.01.pos-cmd => hpg.stepgen.01.position-cmd

net motor.01.pos-fb <= hpg.stepgen.01.position-fb
net motor.01.pos-fb => axis.1.motor-pos-fb

# timing stuff from .ini file 
setp hpg.stepgen.01.dirsetup		[AXIS_1]DIRSETUP
setp hpg.stepgen.01.dirhold		[AXIS_1]DIRHOLD

setp hpg.stepgen.01.steplen		[AXIS_1]STEPLEN
setp hpg.stepgen.01.stepspace       	[AXIS_1]STEPSPACE

setp hpg.stepgen.01.position-scale  	[AXIS_1]SCALE

setp hpg.stepgen.01.maxvel          	[AXIS_1]STEPGEN_MAX_VEL
setp hpg.stepgen.01.maxaccel        	[AXIS_1]STEPGEN_MAX_ACC 

setp hpg.stepgen.01.steppin		812
setp hpg.stepgen.01.dirpin		819


# ########################## #
# Skipping extruder + Z-axis #
# ########################## #

# ################################################## #
# Standard I/O - EStop, Enables, Limit Switches, Etc # 
# ################################################## #

# Create estop signal chain 
# Drive software estop to hardware 
# net estop-out iocontrol.0.user-enable-out => bb_gpio.p8.out-26
# setp bb_gpio.p8.out-26.invert 1

# Monitor estop input from hardware
 net estop-loop bb_gpio.p8.in-17 => iocontrol.0.emc-enable-in
 setp bb_gpio.p8.in-17.invert 1
#net estop-loop <= Therm.no-error => iocontrol.0.emc-enable-in

#net estop-loop <= Therm.no-error => iocontrol.0.emc-enable-in


# create signals for tool loading loopback 
net tool-prep-loop iocontrol.0.tool-prepare => iocontrol.0.tool-prepared
net tool-change-loop iocontrol.0.tool-change => iocontrol.0.tool-changed 

# Axis enable signal (active low)
net emcmot.00.enable => bb_gpio.p9.out-14
setp bb_gpio.p9.out-14.invert 1 

# Machine power. THIS IS A TROUBLE MAKER
net main_enable <= halui.machine.is-on => HWConfig.enable# => Pwm.enable
#net bb_gpio.p

# Microstepping and Mode 
# value = 1/2^value. e.g. 5 means 1/32 step.
setp HWConfig.stepper.0.microstepping 3
setp HWConfig.stepper.1.microstepping 3
#setp HWConfig.stepper.2.microstepping 5
#setp HWConfig.stepper.3.microstepping 5
setp HWConfig.stepper.0.current 1.7
setp HWConfig.stepper.1.current 1.7
#setp HWConfig.stepper.2.current 1
#setp HWConfig.stepper.3.current 1.5

# ############## #
# Limit Switches #
# ############## #
newsig limit-x-min bit
newsig limit-x-max bit
newsig limit-y-min bit
newsig limit-y-max bit
#newsig limit-z-min bit
#newsig limit-z-max bit

net limit-x-min <= bb_gpio.p9.in-25 
net limit-x-max <= bb_gpio.p9.in-11
net limit-y-min <= bb_gpio.p9.in-23 
net limit-y-max <= bb_gpio.p9.in-16
#net limit-z-min <= bb_gpio.p9.in-13
#net limit-z-max <= bb_gpio.p9.in-18


# Adjust as needed for your switch polarity
# setp bb_gpio.p8.in-08.invert 0

# Uncomment if you actually have limit switches setup
# You probably want to setup homing in the INI file, as well
net limit-x-min => axis.0.home-sw-in
#net limit-x-min => axis.0.neg-lim-sw-in
#net limit-x-max => axis.0.pos-lim-sw-in
net limit-y-min => axis.1.home-sw-in
#net limit-y-min => axis.1.neg-lim-sw-in
#net limit-y-max => axis.1.pos-lim-sw-in
#net limit-z-max => axis.2.home-sw-in
#net limit-z-min => axis.2.neg-lim-sw-in
#net limit-z-max => axis.2.pos-lim-sw-in









